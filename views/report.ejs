<!DOCTYPE html>
<html lang="en">
  <%- include("partials/head.ejs") %>
  <body>
    <%- include("partials/header.ejs") %> <% for (let college_key of ['viit',
    'vit', 'vu']) { %>

    <table cellpadding="5px">
      <caption>
        <h2><%= names.college[college_key] %></h2>
      </caption>
      <thead>
        <tr>
          <th rowspan="2">Branch</th>
          <th colspan="3">NRI</th>
          <th colspan="3">OCI</th>
          <th colspan="3">FN</th>
          <th colspan="3">PIO</th>
          <th colspan="3">CIWGC</th>
          <th colspan="3">Total</th>
        </tr>
        <tr>
          <th>Total</th>
          <th>Filled</th>
          <th>Vacant</th>
          <th>Total</th>
          <th>Filled</th>
          <th>Vacant</th>
          <th>Total</th>
          <th>Filled</th>
          <th>Vacant</th>
          <th>Total</th>
          <th>Filled</th>
          <th>Vacant</th>
          <th>Total</th>
          <th>Filled</th>
          <th>Vacant</th>
          <th>Intake</th>
          <th>Filled</th>
          <th>Vacant</th>
        </tr>
      </thead>
      <tbody>
        <% const collegeDataFiltered = collegeData.filter(data => data.college
        === college_key); collegeDataFiltered.forEach(function(data) { %>
        <tr>
          <td><%= names.branch[data.branch] %></td>
          <td><%= data.nri_intake %></td>
          <td><%= data.nri_filled %></td>
          <td><%= data.nri_vacant %></td>
          <td><%= data.oci_intake %></td>
          <td><%= data.oci_filled %></td>
          <td><%= data.oci_vacant %></td>
          <td><%= data.fn_intake %></td>
          <td><%= data.fn_filled %></td>
          <td><%= data.fn_vacant %></td>
          <td><%= data.pio_intake %></td>
          <td><%= data.pio_filled %></td>
          <td><%= data.pio_vacant %></td>
          <td><%= data.ciwgc_intake %></td>
          <td><%= data.ciwgc_filled %></td>
          <td><%= data.ciwgc_vacant %></td>
          <td><%= data.total_intake %></td>
          <td><%= data.total_filled %></td>
          <td><%= data.total_vacant %></td>
        </tr>
        <% }); %>
      </tbody>
    </table>

    <div>
      <button class="btn btn-info downloadCSV">Get CSV file</button>
      <button class="btn btn-primary printData">Print Data</button>
    </div>

    <% } %>

    <div>
      <a href="/" class="btn btn-success">Home</a>
    </div>

    <%- include("partials/footer.ejs") %>

    <script>
      // Function to download CSV
      const downloadCSVButtons = document.querySelectorAll(".downloadCSV");
      downloadCSVButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const table = button.parentElement.previousElementSibling;
          const rows = Array.from(table.querySelectorAll("tr"));
          const csvContent = rows
            .map((row) =>
              Array.from(row.querySelectorAll("th, td"))
                .map((cell) => cell.textContent)
                .join(",")
            )
            .join("\n");
          const blob = new Blob([csvContent], {
            type: "text/csv;charset=utf-8;",
          });
          const link = document.createElement("a");
          if (link.download !== undefined) {
            const url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", "data.csv");
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
          } else {
            alert(
              "Your browser does not support downloading files. Please try again in a different browser."
            );
          }
        });
      });

      // Function to print table data
      const printDataButtons = document.querySelectorAll(".printData");
      printDataButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const table = button.parentElement.previousElementSibling;
          const printWindow = window.open("", "_blank");
          printWindow.document.write(
            "<html><head><title>Print</title></head><body>"
          );
          //       printWindow.document.write(table.outerHTML);
          //       printWindow.document.write("</body></html>");
          //       printWindow.document.close();
          //       printWindow.print();
          //     });
          //   });

          // Function to print table data
          //   const printDataButtons = document.querySelectorAll(".printData");
          //   printDataButtons.forEach((button) => {
          // button.addEventListener("click", function () {
          //   const table = button.parentElement.previousElementSibling;
          //   const printWindow = window.open("", "_blank");
          //   printWindow.document.write(
          // "<html><head><title>Print</title><style>@media print { table { border-collapse: collapse; width: 100%; border: 1px solid #000; } th, td { border: 1px solid #000; } }</style>"
          //   );
          //   printWindow.document.write(table.querySelector("caption").innerHTML);
          printWindow.document.write(table.outerHTML);
          printWindow.document.write("</body></html>");
          printWindow.document.close();
          //   printWindow.focus();
          // Focus on the new window
          printWindow.print();
          //   printWindow.close();
          // Close the new window after printing
        });
      });
    </script>
  </body>
</html>
